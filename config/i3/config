# This file has been auto-generated by i3-config-wizard(1).
# It will not be overwritten, so edit it as you like.
#
# Should you change your keyboard layout some time, delete
# this file and re-run i3-config-wizard(1).
#

# i3 config file (v4)
#
# Please see https://i3wm.org/docs/userguide.html for a complete reference!

# Screen Configuration
#exec_always --no-startup-id ~/.config/screen_config.sh
exec syndaemon -K -R

## Variables
set $wallpaper ~/Seguro/Wallpapers/*
set $mpdHost 10.0.0.10

set $mod Mod4

# Colors
set_from_resource $fg foreground
set_from_resource $bg background
set_from_resource $fbg color8
set_from_resource $color1 color1
set_from_resource $color2 color2
set_from_resource $color3 color3
set_from_resource $color4 color4
set_from_resource $color5 color5
set_from_resource $color6 color6

set_from_resource $font font

# Terminal 
set $terminal kitty

# Font for window titles. Will also be used by the bar unless a different font
# is used in the bar {} block below.
font pango:APL385 Unicode 9

# This font is widely installed, provides lots of unicode glyphs, right-to-left
# text rendering and scalability on retina/hidpi displays (thanks to pango).
#font pango:DejaVu Sans Mono 8

# Before i3 v4.8, we used to recommend this one as the default:
# font -misc-fixed-medium-r-normal--13-120-75-75-C-70-iso10646-1
# The font above is very space-efficient, that is, it looks good, sharp and
# clear in small sizes. However, its unicode glyph coverage is limited, the old
# X core fonts rendering does not support right-to-left and this being a bitmap
# font, it doesn’t scale on retina/hidpi displays.

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# start a terminal
bindsym $mod+Return exec $terminal
bindsym $mod+shift+Return exec $terminal && i3-msg "[id=$(xdotool getactivewindow)] floating enable"

# kill focused window
bindsym $mod+Shift+q kill

# start dmenu (a program launcher)
bindsym $mod+d exec "~/.config/rofi/launchers/misc/launcher.sh"
bindsym $mod+shift+d exec "~/.config/rofi/applets/menu/apps.sh"
bindsym $mod+control+d exec "~/.config/rofi/applets/menu/quicklinks.sh"
bindsym mod1+Tab exec "rofi -show window -theme themes/custom"
bindsym $mod+Escape exec "~/.config/rofi/applets/menu/powermenu.sh"

bindsym $mod+f exec "thunar"

# There also is the (new) i3-dmenu-desktop which only displays applications
# shipping a .desktop file. It is a wrapper around dmenu, so you need that
# installed.
# bindsym $mod+d exec --no-startup-id i3-dmenu-desktop

# change focus
bindsym $mod+h focus left
bindsym $mod+j focus down
bindsym $mod+k focus up
bindsym $mod+l focus right

# alternatively, you can use the cursor keys:
bindsym $mod+Left focus left
bindsym $mod+Down focus down
bindsym $mod+Up focus up
bindsym $mod+Right focus right

# move focused window
bindsym $mod+Shift+h move left
bindsym $mod+Shift+j move down
bindsym $mod+Shift+k move up
bindsym $mod+Shift+l move right

# alternatively, you can use the cursor keys:
bindsym $mod+Shift+Left move left
bindsym $mod+Shift+Down move down
bindsym $mod+Shift+Up move up
bindsym $mod+Shift+Right move right

# toggle split in horizontal or vertical orientation
bindsym $mod+t split toggle

# enter fullscreen mode for the focused container
bindsym $mod+F11 fullscreen toggle

# change container layout (stacked, tabbed, toggle split)
#bindsym $mod+s layout stacking
bindsym $mod+w layout tabbed
bindsym $mod+e layout toggle split

# toggle tiling / floating
bindsym $mod+Shift+space floating toggle
bindsym $mod+Shift+s  floating toggle ; sticky toggle

# change focus between tiling / floating windows
bindsym $mod+space focus mode_toggle

# focus the parent container
bindsym $mod+a focus parent

# focus the child container
#bindsym $mod+d focus child

# Workspace variables


set $ws1 "1"
set $ws2 "2"
set $ws3 "3"
set $ws4 "4"
set $ws5 "5"
set $ws6 "6"
set $ws7 "7"
set $ws8 "8"
set $ws9 "9"
set $ws10 "10"

# Bind workspaces to screen

workspace $ws1 output primary
workspace $ws8 output eDP1
workspace $ws9 output eDP1

# switch to workspace
bindsym $mod+1 workspace 1
bindsym $mod+2 workspace $ws2
bindsym $mod+3 workspace 3
bindsym $mod+4 workspace 4
bindsym $mod+5 workspace 5
bindsym $mod+6 workspace 6
bindsym $mod+7 workspace 7
bindsym $mod+8 workspace $ws8
bindsym $mod+9 workspace $ws9
bindsym $mod+0 workspace $ws10

# move focused container to workspace
bindsym $mod+Shift+1 move container to workspace 1
bindsym $mod+Shift+2 move container to workspace $ws2
bindsym $mod+Shift+3 move container to workspace 3
bindsym $mod+Shift+4 move container to workspace 4
bindsym $mod+Shift+5 move container to workspace 5
bindsym $mod+Shift+6 move container to workspace 6
bindsym $mod+Shift+7 move container to workspace 7
bindsym $mod+Shift+8 move container to workspace $ws8
bindsym $mod+Shift+9 move container to workspace $ws9
bindsym $mod+Shift+0 move container to workspace $ws10

# Force custom apps to open in specific workspace

# Update prompt
for_window [title="updates"] floating enabled

# IDE's and text editors
assign [class="Code"] $ws2

# Visual editors
assign [class="Godot"] $ws5

# Institute
assign [class="Microsoft Teams"] $ws8

# Chats
assign [class="whatsapp-nativefier-d40211"] $ws9
assign [class="TelegramDesktop"] $ws9
assign [class="discord"] $ws9


# reload the configuration file
bindsym $mod+Shift+c reload
# restart i3 inplace (preserves your layout/session, can be used to upgrade i3)
bindsym $mod+Shift+r restart
# exit i3 (logs you out of your X session)
bindsym $mod+Shift+e exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -b 'Yes, exit i3' 'i3-msg exit'"

# resize window (you can also use the mouse for that)
mode "resize" {
        # These bindings trigger as soon as you enter the resize mode

        # Pressing left will shrink the window’s width.
        # Pressing right will grow the window’s width.
        # Pressing up will shrink the window’s height.
        # Pressing down will grow the window’s height.
        bindsym j resize shrink width 10 px or 10 ppt
        bindsym k resize grow height 10 px or 10 ppt
        bindsym l resize shrink height 10 px or 10 ppt
        bindsym ntilde resize grow width 10 px or 10 ppt

        # same bindings, but for the arrow keys
        bindsym Left resize shrink width 10 px or 10 ppt
        bindsym Down resize grow height 10 px or 10 ppt
        bindsym Up resize shrink height 10 px or 10 ppt
        bindsym Right resize grow width 10 px or 10 ppt

        # back to normal: Enter or Escape
        bindsym Return mode "default"
        bindsym Escape mode "default"
}

bindsym $mod+r mode "resize"

# Start i3bar to display a workspace bar (plus the system information i3status
# finds out, if available)
#bar {
#        status_command i3status
#}

##	Personalization

# colors

# class                   border    backgr.   text    indic.   child_border
  client.focused          $color1   $color1   $fg     $fg      $color1
  client.unfocused        $bg       $bg       $fg     $color5   
  client.urgent           $color15  $color15  $fg     $color15
  client.placeholder      $fg       $bg       $fg     $color5 

# i3-gasp

gaps inner 10
gaps outer 2
smart_borders on
# smart_gaps on
new_float pixel 
default_border pixel 2
#new_window pixel 
#hide_edge_borders smart_no_gaps

##	Start Programs
exec_always --no-startup-id ~/.config/master.sh
exec --no-startup-id udiskie
exec --no-startup-id kdeconnect-indicator

# Notifications
exec_always --no-startup-id dunst -lb "$bg" -nb "$bg" -cb "$bg" -lf "$fg" -cf "$fg" -nf "$fg -font $font" 

# Music
exec --no-startup-id i3-msg 'workspace $ws10; exec $terminal -e ncmpcpp'

# Personal
exec whatsapp-nativefier
exec telegram-desktop
exec discord

## key binding
#
# media keys are defined in: /usr/include/X11/XF86keysym.h

# Scratchpad

# Make the currently focused window a scratchpad
bindsym $mod+Shift+minus move scratchpad

# Show the first scratchpad window
bindsym $mod+minus scratchpad show

# remove a floating window from scratchpad
bindsym $mod+x floating disable; floating enable

# Open some programs in floating mode
for_window [class="Thunar"] floating enabled
for_window [class="Godot"] floating enabled

# Notification controls
bindsym $mod+BackSpace exec dunstctl close
bindsym $mod+question exec dunstctl history-pop

# Screenshots

bindsym --release Print exec "scrot -ub /tmp/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"
#bindsym --release Shift+Print exec "scrot -s /tmp/screenshot-$(date +%F_%T).png -e 'xclip -selection c -t image/png < $f'"
bindsym --release Shift+Print exec flameshot gui

# Pulse Audio controls
bindsym XF86AudioRaiseVolume exec --no-startup-id pactl set-sink-volume 0 +5% #increase sound volume
bindsym XF86AudioLowerVolume exec --no-startup-id pactl set-sink-volume 0 -5% #decrease sound volume
bindsym XF86AudioMute exec --no-startup-id pactl set-sink-mute 0 toggle # mute sound

# Sreen brightness controls
bindsym XF86MonBrightnessUp exec xbacklight -inc 1 # increase screen brightness
bindsym XF86MonBrightnessDown exec xbacklight -dec 1 # decrease screen brightness

# Media player controls
bindsym XF86AudioPlay exec playerctl play-pause
bindsym XF86AudioNext exec playerctl position 10+
bindsym XF86AudioPrev exec playerctl position 10-

# MPC media player controls variant
bindsym Shift+XF86AudioPlay exec "mpc --host=$mpdHost -q toggle"
bindsym Shift+XF86AudioNext exec "mpc --host=$mpdHost -q next"
bindsym Shift+XF86AudioPrev exec "mpc --host=$mpdHost -q prev"
bindsym Shift+XF86AudioMute exec "mpc --host=$mpdHost -q toggleoutput 1"

# Move workspace to screens
bindsym $mod+Ctrl+Left move workspace to output left
bindsym $mod+Ctrl+Right move workspace to output right
bindsym $mod+Ctrl+Up move workspace to output Up
bindsym $mod+Ctrl+Down move workspace to output Down

# Swap workspaces between screens
bindsym $mod+s exec "python ~/.config/i3/cycle-workspace.py"

# Rotate screen
bindsym $mod+Ctrl+shift+Up exec xrandr --output HDMI1 --rotate normal; exec --no-startup-id orientation='normal' ~/.config/polybar/launch.sh
bindsym $mod+Ctrl+shift+Left exec xrandr --output HDMI1 --rotate left; exec --no-startup-id orientation='rotated' ~/.config/polybar/launch.sh
bindsym $mod+Ctrl+shift+Right exec xrandr --output HDMI1 --rotate right; exec --no-startup-id orientation='rotated' ~/.config/polybar/launch.sh
bindsym $mod+Ctrl+shift+Down exec xrandr --output HDMI1 --rotate inverted; exec --no-startup-id orientation='normal' ~/.config/polybar/launch.sh
